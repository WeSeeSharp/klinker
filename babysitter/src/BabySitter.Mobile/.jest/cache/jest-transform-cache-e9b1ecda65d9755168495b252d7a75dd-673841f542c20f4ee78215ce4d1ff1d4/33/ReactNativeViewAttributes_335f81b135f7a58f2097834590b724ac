568cd855b822c1393af6feecb49503d2


'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var ReactNativeStyleAttributes = require('ReactNativeStyleAttributes');

var ReactNativeViewAttributes = {};

ReactNativeViewAttributes.UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityActions: true,
  accessibilityLabel: true,
  accessibilityComponentType: true,
  accessibilityLiveRegion: true,
  accessibilityTraits: true,
  importantForAccessibility: true,
  nativeID: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityAction: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes
};

ReactNativeViewAttributes.RCTView = _extends({}, ReactNativeViewAttributes.UIView, {
  removeClippedSubviews: true
});

module.exports = ReactNativeViewAttributes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMuanMiXSwibmFtZXMiOlsiUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMiLCJyZXF1aXJlIiwiUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcyIsIlVJVmlldyIsInBvaW50ZXJFdmVudHMiLCJhY2Nlc3NpYmxlIiwiYWNjZXNzaWJpbGl0eUFjdGlvbnMiLCJhY2Nlc3NpYmlsaXR5TGFiZWwiLCJhY2Nlc3NpYmlsaXR5Q29tcG9uZW50VHlwZSIsImFjY2Vzc2liaWxpdHlMaXZlUmVnaW9uIiwiYWNjZXNzaWJpbGl0eVRyYWl0cyIsImltcG9ydGFudEZvckFjY2Vzc2liaWxpdHkiLCJuYXRpdmVJRCIsInRlc3RJRCIsInJlbmRlclRvSGFyZHdhcmVUZXh0dXJlQW5kcm9pZCIsInNob3VsZFJhc3Rlcml6ZUlPUyIsIm9uTGF5b3V0Iiwib25BY2Nlc3NpYmlsaXR5QWN0aW9uIiwib25BY2Nlc3NpYmlsaXR5VGFwIiwib25NYWdpY1RhcCIsImNvbGxhcHNhYmxlIiwibmVlZHNPZmZzY3JlZW5BbHBoYUNvbXBvc2l0aW5nIiwic3R5bGUiLCJSQ1RWaWV3IiwicmVtb3ZlQ2xpcHBlZFN1YnZpZXdzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFVQTs7OztBQUVBLElBQU1BLDZCQUE2QkMsUUFBUSw0QkFBUixDQUFuQzs7QUFFQSxJQUFNQyw0QkFBNEIsRUFBbEM7O0FBRUFBLDBCQUEwQkMsTUFBMUIsR0FBbUM7QUFDakNDLGlCQUFlLElBRGtCO0FBRWpDQyxjQUFZLElBRnFCO0FBR2pDQyx3QkFBc0IsSUFIVztBQUlqQ0Msc0JBQW9CLElBSmE7QUFLakNDLDhCQUE0QixJQUxLO0FBTWpDQywyQkFBeUIsSUFOUTtBQU9qQ0MsdUJBQXFCLElBUFk7QUFRakNDLDZCQUEyQixJQVJNO0FBU2pDQyxZQUFVLElBVHVCO0FBVWpDQyxVQUFRLElBVnlCO0FBV2pDQyxrQ0FBZ0MsSUFYQztBQVlqQ0Msc0JBQW9CLElBWmE7QUFhakNDLFlBQVUsSUFidUI7QUFjakNDLHlCQUF1QixJQWRVO0FBZWpDQyxzQkFBb0IsSUFmYTtBQWdCakNDLGNBQVksSUFoQnFCO0FBaUJqQ0MsZUFBYSxJQWpCb0I7QUFrQmpDQyxrQ0FBZ0MsSUFsQkM7QUFtQmpDQyxTQUFPdEI7QUFuQjBCLENBQW5DOztBQXNCQUUsMEJBQTBCcUIsT0FBMUIsZ0JBQ0tyQiwwQkFBMEJDLE1BRC9CO0FBUUVxQix5QkFBdUI7QUFSekI7O0FBV0FDLE9BQU9DLE9BQVAsR0FBaUJ4Qix5QkFBakIiLCJmaWxlIjoiUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3dcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IFJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzID0gcmVxdWlyZSgnUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMnKTtcblxuY29uc3QgUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcyA9IHt9O1xuXG5SZWFjdE5hdGl2ZVZpZXdBdHRyaWJ1dGVzLlVJVmlldyA9IHtcbiAgcG9pbnRlckV2ZW50czogdHJ1ZSxcbiAgYWNjZXNzaWJsZTogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUFjdGlvbnM6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlMYWJlbDogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUNvbXBvbmVudFR5cGU6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlMaXZlUmVnaW9uOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5VHJhaXRzOiB0cnVlLFxuICBpbXBvcnRhbnRGb3JBY2Nlc3NpYmlsaXR5OiB0cnVlLFxuICBuYXRpdmVJRDogdHJ1ZSxcbiAgdGVzdElEOiB0cnVlLFxuICByZW5kZXJUb0hhcmR3YXJlVGV4dHVyZUFuZHJvaWQ6IHRydWUsXG4gIHNob3VsZFJhc3Rlcml6ZUlPUzogdHJ1ZSxcbiAgb25MYXlvdXQ6IHRydWUsXG4gIG9uQWNjZXNzaWJpbGl0eUFjdGlvbjogdHJ1ZSxcbiAgb25BY2Nlc3NpYmlsaXR5VGFwOiB0cnVlLFxuICBvbk1hZ2ljVGFwOiB0cnVlLFxuICBjb2xsYXBzYWJsZTogdHJ1ZSxcbiAgbmVlZHNPZmZzY3JlZW5BbHBoYUNvbXBvc2l0aW5nOiB0cnVlLFxuICBzdHlsZTogUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMsXG59O1xuXG5SZWFjdE5hdGl2ZVZpZXdBdHRyaWJ1dGVzLlJDVFZpZXcgPSB7XG4gIC4uLlJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMuVUlWaWV3LFxuXG4gIC8vIFRoaXMgaXMgYSBzcGVjaWFsIHBlcmZvcm1hbmNlIHByb3BlcnR5IGV4cG9zZWQgYnkgUkNUVmlldyBhbmQgdXNlZnVsIGZvclxuICAvLyBzY3JvbGxpbmcgY29udGVudCB3aGVuIHRoZXJlIGFyZSBtYW55IHN1YnZpZXdzLCBtb3N0IG9mIHdoaWNoIGFyZSBvZmZzY3JlZW4uXG4gIC8vIEZvciB0aGlzIHByb3BlcnR5IHRvIGJlIGVmZmVjdGl2ZSwgaXQgbXVzdCBiZSBhcHBsaWVkIHRvIGEgdmlldyB0aGF0IGNvbnRhaW5zXG4gIC8vIG1hbnkgc3Vidmlld3MgdGhhdCBleHRlbmQgb3V0c2lkZSBpdHMgYm91bmQuIFRoZSBzdWJ2aWV3cyBtdXN0IGFsc28gaGF2ZVxuICAvLyBvdmVyZmxvdzogaGlkZGVuLCBhcyBzaG91bGQgdGhlIGNvbnRhaW5pbmcgdmlldyAob3Igb25lIG9mIGl0cyBzdXBlcnZpZXdzKS5cbiAgcmVtb3ZlQ2xpcHBlZFN1YnZpZXdzOiB0cnVlLFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdE5hdGl2ZVZpZXdBdHRyaWJ1dGVzO1xuIl19