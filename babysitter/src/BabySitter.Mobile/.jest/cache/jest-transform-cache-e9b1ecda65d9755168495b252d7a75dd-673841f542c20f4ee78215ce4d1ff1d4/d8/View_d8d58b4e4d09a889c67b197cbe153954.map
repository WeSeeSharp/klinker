{"version":3,"sources":["View.js"],"names":["React","require","TextAncestor","invariant","requireNativeComponent","RCTView","ViewToExport","__DEV__","forwardRef","props","ref","hasTextAncestor","displayName","module","exports"],"mappings":";;AAUA;;;;AAEA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,eAAeD,QAAQ,cAAR,CAArB;;AAEA,IAAME,YAAYF,QAAQ,oBAAR,CAAlB;AACA,IAAMG,yBAAyBH,QAAQ,wBAAR,CAA/B;;AAcA,IAAMI,UAAUD,uBAAuB,SAAvB,CAAhB;;AAEA,IAAIE,eAAeD,OAAnB;AACA,IAAIE,OAAJ,EAAa;AAEXD,iBAAeN,MAAMQ,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR;AAAA,WAC9B;AAAC,kBAAD,CAAc,QAAd;AAAA;AACG,iCAAmB;AAClBP,kBACE,CAACQ,eADH,EAEE,6DAFF;AAIA,eAAO,oBAAC,OAAD,eAAaF,KAAb,IAAoB,KAAKC,GAAzB,IAAP;AACD;AAPH,KAD8B;AAAA,GAAjB,CAAf;AAWAJ,eAAaM,WAAb,GAA2B,MAA3B;AACD;;AAEDC,OAAOC,OAAP,GAAmBR,YAAnB","file":"View.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst React = require('React');\nconst TextAncestor = require('TextAncestor');\n\nconst invariant = require('fbjs/lib/invariant');\nconst requireNativeComponent = require('requireNativeComponent');\n\nimport type {NativeComponent} from 'ReactNative';\nimport type {ViewProps} from 'ViewPropTypes';\n\nexport type Props = ViewProps;\n\n/**\n * The most fundamental component for building a UI, View is a container that\n * supports layout with flexbox, style, some touch handling, and accessibility\n * controls.\n *\n * @see http://facebook.github.io/react-native/docs/view.html\n */\nconst RCTView = requireNativeComponent('RCTView');\n\nlet ViewToExport = RCTView;\nif (__DEV__) {\n  // $FlowFixMe - TODO T29156721 `React.forwardRef` is not defined in Flow, yet.\n  ViewToExport = React.forwardRef((props, ref) => (\n    <TextAncestor.Consumer>\n      {hasTextAncestor => {\n        invariant(\n          !hasTextAncestor,\n          'Nesting of <View> within <Text> is not currently supported.',\n        );\n        return <RCTView {...props} ref={ref} />;\n      }}\n    </TextAncestor.Consumer>\n  ));\n  ViewToExport.displayName = 'View';\n}\n\nmodule.exports = ((ViewToExport: any): Class<NativeComponent<ViewProps>>);\n"]}